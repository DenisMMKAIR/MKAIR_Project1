// <auto-generated />
using System;
using Infrastructure.FGIS.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.FGIS.Database.Maintenance.Migrations
{
    [DbContext(typeof(FGISDatabase))]
    [Migration("20250627100924_Test2")]
    partial class Test2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long>("DeviceManufacturedYear")
                        .HasColumnType("bigint")
                        .HasColumnName("device_manufactured_year");

                    b.Property<string>("DeviceModification")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_modification");

                    b.Property<string>("DeviceSerialNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_serial_number");

                    b.Property<Guid?>("DeviceTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("device_type_id");

                    b.HasKey("Id")
                        .HasName("pk_devices");

                    b.HasIndex("DeviceTypeId")
                        .HasDatabaseName("ix_devices_device_type_id");

                    b.ToTable("devices", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.DeviceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("DeviceTypeNotation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_type_notation");

                    b.Property<string>("DeviceTypeNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_type_number");

                    b.Property<string>("DeviceTypeTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_type_title");

                    b.HasKey("Id")
                        .HasName("pk_device_types");

                    b.ToTable("device_types", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.Etalon", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<bool>("Applicability")
                        .HasColumnType("boolean")
                        .HasColumnName("applicability");

                    b.Property<string>("Factory_Num")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("factory_num");

                    b.Property<string>("MiNotation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mi_notation");

                    b.Property<string>("MiType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mi_type");

                    b.Property<string>("MiType_Num")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mi_type_num");

                    b.Property<string>("Modification")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("modification");

                    b.Property<string>("NpEnumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("np_enumber");

                    b.Property<string>("RankClass")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rank_class");

                    b.Property<string>("RankCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rank_code");

                    b.Property<string>("Schematitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("schematitle");

                    b.Property<string>("Schematype")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("schematype");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Number")
                        .HasName("pk_etalons");

                    b.ToTable("etalons", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.Etalon+EtalonVerificationDocs", b =>
                {
                    b.Property<string>("Vri_Id")
                        .HasColumnType("text")
                        .HasColumnName("vri_id");

                    b.Property<bool>("Applicability")
                        .HasColumnType("boolean")
                        .HasColumnName("applicability");

                    b.Property<string>("EtalonNumber")
                        .HasColumnType("text")
                        .HasColumnName("etalon_number");

                    b.Property<string>("Org_Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("org_title");

                    b.Property<string>("Result_Docnum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("result_docnum");

                    b.Property<string>("Valid_Date")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valid_date");

                    b.Property<string>("Verification_Date")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verification_date");

                    b.HasKey("Vri_Id")
                        .HasName("pk_etalon_verification_docs");

                    b.HasIndex("EtalonNumber")
                        .HasDatabaseName("ix_etalon_verification_docs_etalon_number");

                    b.ToTable("etalon_verification_docs", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.MonthResult", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<bool>("VerificationIdsCollected")
                        .HasColumnType("boolean")
                        .HasColumnName("verification_ids_collected");

                    b.HasKey("Date")
                        .HasName("pk_month_results");

                    b.ToTable("month_results", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.Verification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("additional_info");

                    b.Property<bool>("Applicable")
                        .HasColumnType("boolean")
                        .HasColumnName("applicable");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("uuid")
                        .HasColumnName("device_id");

                    b.PrimitiveCollection<string[]>("EtalonNumbers")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("etalon_numbers");

                    b.Property<DateOnly>("NextDate")
                        .HasColumnType("date")
                        .HasColumnName("next_date");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("owner_name");

                    b.Property<string>("VerificationName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verification_name");

                    b.HasKey("Id")
                        .HasName("pk_verifications");

                    b.HasIndex("DeviceId")
                        .HasDatabaseName("ix_verifications_device_id");

                    b.ToTable("verifications", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.VerificationId", b =>
                {
                    b.Property<string>("Vri_id")
                        .HasColumnType("text")
                        .HasColumnName("vri_id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.HasKey("Vri_id")
                        .HasName("pk_verification_ids");

                    b.ToTable("verification_ids", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.Device", b =>
                {
                    b.HasOne("Infrastructure.FGIS.Database.Entities.DeviceType", "DeviceType")
                        .WithMany()
                        .HasForeignKey("DeviceTypeId")
                        .HasConstraintName("fk_devices_device_types_device_type_id");

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.Etalon+EtalonVerificationDocs", b =>
                {
                    b.HasOne("Infrastructure.FGIS.Database.Entities.Etalon", null)
                        .WithMany("CResults")
                        .HasForeignKey("EtalonNumber")
                        .HasConstraintName("fk_etalon_verification_docs_etalons_etalon_number");
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.Verification", b =>
                {
                    b.HasOne("Infrastructure.FGIS.Database.Entities.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .HasConstraintName("fk_verifications_devices_device_id");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Entities.Etalon", b =>
                {
                    b.Navigation("CResults");
                });
#pragma warning restore 612, 618
        }
    }
}
