// <auto-generated />
using System;
using Infrastructure.FGIS.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.FGIS.Database.Maintenance.Migrations
{
    [DbContext(typeof(FGISDatabase))]
    [Migration("20250626051855_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.FGIS.Database.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long>("DeviceManufacturedYear")
                        .HasColumnType("bigint")
                        .HasColumnName("device_manufactured_year");

                    b.Property<string>("DeviceModification")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_modification");

                    b.Property<string>("DeviceSerialNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_serial_number");

                    b.HasKey("Id")
                        .HasName("pk_devices");

                    b.ToTable("devices", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.DeviceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("DeviceTypeNotation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_type_notation");

                    b.Property<string>("DeviceTypeNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_type_number");

                    b.Property<string>("DeviceTypeTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("device_type_title");

                    b.HasKey("Id")
                        .HasName("pk_device_types");

                    b.ToTable("device_types", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Etalon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ManufactureNum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("manufacture_num");

                    b.Property<long>("ManufactureYear")
                        .HasColumnType("bigint")
                        .HasColumnName("manufacture_year");

                    b.Property<string>("Modification")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("modification");

                    b.Property<string>("Notation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("notation");

                    b.Property<string>("RankCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rank_code");

                    b.Property<string>("RankTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rank_title");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reg_number");

                    b.Property<string>("SchemaTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("schema_title");

                    b.Property<string>("TypeNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type_number");

                    b.Property<string>("TypeTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type_title");

                    b.Property<Guid?>("VerificationId")
                        .HasColumnType("uuid")
                        .HasColumnName("verification_id");

                    b.HasKey("Id")
                        .HasName("pk_etalons");

                    b.HasIndex("VerificationId")
                        .HasDatabaseName("ix_etalons_verification_id");

                    b.ToTable("etalons", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Verification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("additional_info");

                    b.Property<bool>("Applicable")
                        .HasColumnType("boolean")
                        .HasColumnName("applicable");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("uuid")
                        .HasColumnName("device_id");

                    b.Property<Guid?>("DeviceTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("device_type_id");

                    b.Property<DateOnly>("NextDate")
                        .HasColumnType("date")
                        .HasColumnName("next_date");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("owner_name");

                    b.Property<string>("VerificationName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verification_name");

                    b.HasKey("Id")
                        .HasName("pk_verifications");

                    b.HasIndex("DeviceId")
                        .HasDatabaseName("ix_verifications_device_id");

                    b.HasIndex("DeviceTypeId")
                        .HasDatabaseName("ix_verifications_device_type_id");

                    b.ToTable("verifications", (string)null);
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Etalon", b =>
                {
                    b.HasOne("Infrastructure.FGIS.Database.Verification", null)
                        .WithMany("Etalons")
                        .HasForeignKey("VerificationId")
                        .HasConstraintName("fk_etalons_verifications_verification_id");
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Verification", b =>
                {
                    b.HasOne("Infrastructure.FGIS.Database.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .HasConstraintName("fk_verifications_devices_device_id");

                    b.HasOne("Infrastructure.FGIS.Database.DeviceType", "DeviceType")
                        .WithMany()
                        .HasForeignKey("DeviceTypeId")
                        .HasConstraintName("fk_verifications_device_types_device_type_id");

                    b.Navigation("Device");

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("Infrastructure.FGIS.Database.Verification", b =>
                {
                    b.Navigation("Etalons");
                });
#pragma warning restore 612, 618
        }
    }
}
